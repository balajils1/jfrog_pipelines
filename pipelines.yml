 resources:
   - name: docker_build_repo1
     type: GitRepo
     configuration:
       path: balajils1/12345
       gitProvider: balaji
   - name: docker_build_info
     type: BuildInfo
     configuration:
       sourceArtifactory: Art1
       buildNumber: 1
       buildName: dockertest
   - name: unsigned_release_bundle_docker_build
     type: ReleaseBundle
     configuration:
       sourceDistribution: dist
       name: docker-prod
       version: v1.0
   - name: signed_release_bundle_docker_build
     type: ReleaseBundle
     configuration:
       sourceDistribution: dist
       name: docker-prod
       version: v1.0
   - name: distribution_rule_docker_build
     type: DistributionRule
     configuration:
       sourceDistribution: dist
       cityName: "*"
       serviceName: "*"
       siteName: "*"
       countryCodes:
         - IN
        
 pipelines:
   - name: demossl_docker
     steps:
       - name: docker_build
         type: DockerBuild
         configuration:
         # nodePool: aws-demo-pool
           dockerFileLocation: .
           dockerFileName: Dockerfile
           dockerImageName: '35.244.19.217:8081/docker/demossl12'
           dockerImageTag: $pipeline_name.$run_number
           integrations:
             - name: Art1
           inputResources:
             - name: docker_build_repo
       - name: docker_push
         type: DockerPush
         configuration:
         # nodePool: aws-demo-pool
           targetRepository: docker
           integrations:
             - name: Art1
           inputSteps:
             - name: docker_build
       - name: docker_publish
         type: PublishBuildInfo
         configuration:
         # nodePool: aws-demo-pool
           inputSteps:
             - name: docker_push
           outputResources:
             - name: docker_build_info
       - name: scan
         type: XrayScan
         configuration:
           #inherits from bash
           inputResources:
             - name: docker_build_info
               trigger: true
           waitUntilFinish: true
       - name: bundle_docker
         type: CreateReleaseBundle
         configuration:
         # nodePool: aws-demo-pool
           releaseBundleName: test-docker-local
           releaseBundleVersion: v0.1.$run_number
           dryRun: false
           sign: false
           description: "docker build"
           inputResources:
             - name: docker_build_info
           outputResources:
             - name: unsigned_release_bundle_docker_build
           releaseNotes:
             syntax: markdown
             content: |
               ## This is a demo to test Docker Build 
                 * Build -> Push -> Publish -> Bundle -> Sign -> Distribute
                 * Points
       - name: sign_release_bundle_docker
         type: SignReleaseBundle
         configuration:
           #nodePool: aws-demo-pool
           inputResources:
             - name: unsigned_release_bundle_docker_build
           outputResources:
             - name: signed_release_bundle_docker_build
       - name: dockerDistribute
         type: DistributeReleaseBundle
         configuration:
           #nodePool: aws-demo-pool
           dryRun: false
           inputResources:
             - name: signed_release_bundle_docker_build
             - name: distribution_rule_docker_build
           integrations:
             - name: dist
         execution:
           onStart:
             - echo "Preparing for work..."
           onSuccess:
             - echo "Job well done!"
             - send_notification notifySMTP --body "built docker image 35.244.19.217:8081/docker/demo:$PIPELINE_NAME.$RUN_NUMBER"
               
